version: 2.1

commands:
    delete-image:
        description: Delete image from docker hub
        steps:
            - run:
                  name: delete image
                  when: on_fail
                  command: |
                      echo "deleting image"
                      docker run --rm -it ejstylz/uda-capstone:latest -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}

orbs:
    aws-eks: circleci/aws-eks@1.1.0
    kubernetes: circleci/kubernetes@0.4.0

executors:
    python:
        docker:
            - image: circleci/python:3.7.3-stretch
    aws:
        docker:
            - image: amazon/aws-cli

jobs:
    build:
        executor: python
        working_directory: ~/repo
        steps:
            - checkout
            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "requirements.txt" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run:
                  name: install dependencies
                  command: |
                      python3 -m venv venv
                      . venv/bin/activate
                      make install

            - save_cache:
                  paths:
                      - ./venv
                  key: v1-dependencies-{{ checksum "requirements.txt" }}
            # run lint!
            - run:
                  name: run lint
                  command: |
                      . venv/bin/activate
                      make lint
    push-docker-image:
        machine: true
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                  # Build, tag and push my docker image to docker hub
                  name: Push image to docker hub
                  command: |
                      docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
                      # Build docker image                       
                      docker build --tag=uda-capstone:latest .
                      # Tag image before pushing
                      docker tag uda-capstone:${CIRCLE_WORKFLOW_ID:0:7} ejstylz/uda-capstone:latest
                      # Push to docker hub            
                      docker push ejstylz/uda-capstone:latest
            - delete-image

    create-cluster:
        executor: aws-eks/python3
        steps:
            - checkout
            - aws-eks/install-aws-iam-authenticator:
                  release-tag: ""
            - run:
                  name: Install eksctl
                  command: |
                      curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
                      sudo mv /tmp/eksctl /usr/local/bin
                      ls -l /usr/local/bin/eksctl
            - aws-eks/create-cluster:
                  cluster-name: uda-capstone
                  skip-kubectl-install: false
                  verbose: 3
                  node-type: t2.small
                  nodes-max: 5
                  ssh-access: false
                  ssh-public-key: ""
            - run:
                  name: Test Create cluster
                  command: sleep 5
                      kubectl get svc
                      kubectl get nodes
                      kubectl get deployment
                      kubectl get pods -o wide

    deploy-app:
        executor: aws-eks/python3
        steps:
            - checkout
            - kubernetes/install
            - aws-eks/update-kubeconfig-with-authenticator:
                  cluster-name: uda-capstone
                  install-kubectl: true
                  aws-region: ${AWS_DEFAULT_REGION}

            - kubernetes/create-or-update-resource:
                  get-rollout-status: false
                  resource-file-path: "k8s/deployment.yml"
                  resource-name: deployment/uda-capstone
            - run:
                  name: Test App deployment
                  command: |
                      sleep 5
                      kubectl get svc
                      kubectl get nodes
                      kubectl get deployment
                      kubectl get pods -o wide
            - kubernetes/create-or-update-resource:
                  resource-file-path: "k8s/load-balancer.yml"
                  resource-name: deployment/uda-capstone
            - run:
                  name: Test Load balancer deployment
                  command: |
                      sleep 5
                      kubectl get svc
                      kubectl get nodes
                      kubectl get deployment
                      kubectl get pods -o wide

    delete-cluster:
        executor: aws-eks/python3
        steps:
            - checkout
            - aws-eks/install-aws-iam-authenticator:
                  release-tag: ""
            - run:
                  name: Install eksctl
                  command: |
                      curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
                      sudo mv /tmp/eksctl /usr/local/bin
                      ls -l /usr/local/bin/eksctl
            - aws-eks/delete-cluster:
                  cluster-name: uda-capstone
                  aws-region: ${AWS_DEFAULT_REGION}
                  wait: true

workflows:
    deployment:
        jobs:
            - build
            - push-docker-image:
                  requires:
                      - build
            - create-cluster:
                  requires:
                      - push-docker-image
            - deploy-app:
                  requires:
                      - create-cluster
            - delete-cluster:
                  requires:
                      - deploy-app
